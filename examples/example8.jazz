// cond = a < b && a < c
inline fn __cond_a_below_b_and_a_below_c<ABC>[TYPE;SIZE](reg TYPE a b c) -> reg bool
{
  reg bool c1 c2 c3;
  reg u8 bc1 bc2;

  ?{ "<u" = c1 } = #CMP_SIZE(a, b);
  bc1 = #SETcc(c1);

  ?{ "<u" = c2 } = #CMP_SIZE(a, c);
  bc2 = #SETcc(c2);

  ?{ "!=" = c3 } = #TEST_8(bc1, bc2); 

  return c3;
}//<>

export fn test() {
    reg u64 a b c;
    reg u32 d e f;
    reg bool b1 b2;
    
    b1 = __cond_a_below_b_and_a_below_c[u64;64](a, b, c);
    b2 = __cond_a_below_b_and_a_below_c[u32;32](d, e, f);
}
