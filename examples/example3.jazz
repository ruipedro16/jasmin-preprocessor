param int FF = 25;

inline fn g<A>(stack u64 x) -> reg u64 {
    reg u64 r;
    r = x;
    return r;
}//<>

inline fn bar<X,Y>(stack u64[X] x, stack u64[Y] y) -> reg u64 {
    reg u64 r;
    r = x[0];
    r += y[0];
    r = g<X>(x[0]);
    return r;
}//<>

inline fn foo<A,B,C> (stack u64[A] a, stack u64[B] b) -> stack u64[C] {
    reg u64 x y;
    x = bar<A,C>(a);
    y = bar<B,C>(b);
    
    stack u64[C] c;
    c[0] = x;
    c[1] = y;
    c[2] = 1;

    return c;
}//<>

export fn test() -> reg u64 {
    // A = 1
    // B = 2
    // C = 3
    stack u64[1] a;
    stack u64[2] b;
    stack u64[3] c;
    reg u64 r;

    c = foo<1,2,3>(a, b);

    r = c[0];

    return r;
}
