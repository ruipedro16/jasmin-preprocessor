param int A = 1;
param int B = 2;

inline fn add1(reg u32 a) -> reg u32 
{ 
  a = a+1;
  return a;
}

inline fn __map_e_add1_u32_6(reg ptr u32[6] a) -> reg ptr u32[6] 
{
  reg u32 i;
  inline int j;
  reg u32 elem;
  reg u32 t;

  i = 0;
  while(i < 6)
  {
    elem = a[(int) i];
    elem = add1(elem);
    a[(int) i] = elem;
  }

  return a;
}

inline fn __map_add1_6(reg ptr u32[6] a) -> reg ptr u32[6]
{
  a = __map_e_add1_u32_6(a);
  return a;
}

export fn test(reg u64 _a) {
    stack u32[4] a;
    reg ptr u32[4] ap;
    reg u64 u;

    ap = a;
    ap = __map_add1_6(ap);
    a = ap;

    u = (64u) a[2];
    [_a] = u;
}
